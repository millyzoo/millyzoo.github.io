{"pages":[],"posts":[{"title":"Command Line 與 Vim 基本操作","text":"Command Line 簡單來說就是和電腦溝通的語言，而我們操作電腦的方式一般來說有兩種： 圖形使用者介面（GUI） 命令列介面（CLI） 圖形使用者介面（GUI）全名是 Graphical User Interface，是指用圖形方式顯示的電腦操作用戶介面，也是我們平常最常用來操作電腦的方式。若用更白話、簡單的方式來說，就像下圖一樣，我們要新增資料夾時，可以透過滑鼠點擊的方式來操作。 命令列介面（CLI）全名是 Command-Line Interface，是在 GUI 普及之前最廣泛運用的使用者介面，通常不支援滑鼠，而是利用鍵盤來輸入指令，電腦接收到指令後，將會執行。 CLI 學習理由對設計師、剪輯師或其他職業來說，都能使用有 GUI 的軟體來工作，但在程式開發裡，有很多工具不提供圖形介面，只能透過指令來和電腦溝通。 結論：工程師必備技能。（想想看，你有看過電影裡有哪個駭客還在慢慢用 GUI 的嗎？感覺就弱掉了對吧。） Command Line 基本指令pwd：顯示目前所在位置（Print Working Directory） ls：列出目前資料夾底下的所有檔案（LiSt） ls-al：列出詳細資料在ls 後面加上參數 -al ，會列出詳細資料，例如：檔案權限、檔案擁有者、檔案大小、最後修改時間、所有隱藏檔案。 cd：切換資料夾（Change Directory） cd ..：如果在cd 後面加上 .. 的話，則能夠回到上一層資料夾 clear：清空終端機畫面想要清空畫面的時候可以輸入這個指令。 超方便！之前不知道這個指令卻又有強迫症想清空畫面，都用很笨的方法關掉再重開終端機。 man 使用說明書（MANual）舉例：輸入 man ls 後，會列出 ls 的詳細用法。 檔案操作相關指令touch：建立檔案或更改檔案時間當檔案「存在」時，輸入 touch 後，檔案修改時間將會更新。 當檔案「不存在」時，輸入 touch 後，將會新增檔案。 rm：刪除檔案（ReMove）輸入 rm 檔案名稱，即可刪除檔案。 這裡記得需輸入檔案格式，如：.txt、.jpg⋯等。 rm 只能刪除檔案，如果想刪除資料夾的話有幾種作法： rmdir 資料夾名稱 ：在 rm 後面加上dir rm -r 資料夾名稱：在 rm 後面加上空格+-r 若檔案本身沒有保護機制，使用 rm -r 指令會直接刪除資料夾及裡面的所有檔案。（慎用！） rm -f 即使檔案有保護機制會跳出確認訊息時，使用 rm -f 指令一樣會無視保護機制，直接刪除檔案。（超危險！） mkdir：建立資料夾（Make DIRectory）輸入 mkdir 資料夾名稱，即可建立資料夾。 mv：移動檔案或改名（MoVe）移動檔案： 更改檔案名稱： cp：複製檔案（CoPy） 指令：cp + 原本檔案名稱 + 新複製的檔案名稱範例： cp test.txt test2.txt 如果要複製「資料夾」的話，要加上 -r。指令：cp + -r + 原資料夾名稱 + 複製的資料夾名稱 date：顯示當前時間top：顯示所有 Process（Table Of Processes）cat：（CATenate），連接檔案或把檔案內容顯示出來 例如：輸入 cat jquery.js，終端機即會顯示jquery.js 裡面所有內容 less：分頁印出檔案因為使用 cat 指令顯示出的檔案內容可能會太佔據終端機版面，可以使用這個指令進入閱讀模式，並可按 :q 退出模式，也不會佔據到終端機版面 echo：印出字串Command Line 其他好用指令grep： 抓取關鍵字 指令：grep + 關鍵字 + 檔案名稱 使用情境示範：有一個 hello.txt 的文字檔案，內含許多文字，今天我要找出關鍵字 oh 的話，該怎麼做呢？ 輸入：grep + oh + hello.txt，即會顯示出擁有 oh 這個關鍵字的所有字句。 wget： 下載檔案非內建指令，需要先安裝。 指令：wget + 想要下載的圖片網址或檔案網址 curl： 送出 request指令組合技pipe:|：串接指令可以把前面的輸出變成後面的輸入。 例如：cat file.txt | grep hi把前面使用 cat 印出的檔案內容，用 grep 抓取關鍵字出來 redirect: &gt;：重新導向redirection： 重新導向 input output（寫給自己看：這部分有空可以再回去看 [CS101] 初心者的計概與 coding 火球術的 2-4 單元） Vim 文字編輯器Vim 是一款歷史悠久，並由 Vi 發展出來的文字編輯器，也是 Git 預設的編輯器。雖然目前已有許多文字編輯器能夠使用，例如：VS Code、Sublime Text 等，但很多人在使用 Git 過程中，可能會不小心進入這個編輯器，而這個編輯器的使用方式相較其他文字編輯器來說比較特別，需要透過特定指令才能達到輸入文字、存檔，甚至是離開的動作。 Vim 的基本操作 常用模式Vim 至少有超過五種以上的模式能夠應用，這邊只簡單介紹三種最常使用的模式： 普通模式（預設模式）：無法打字的狀態 插入模式：可輸入文字，按 ESC 鍵可回普通模式 命令行模式：可輸入以下所提到的常用指令使用 常用指令 :q：不存檔，直接離開 :q!：不存檔，強制離開（當有修改不想儲存時） :w：存檔，但不離開 :!w：強制存檔，但不離開 :w {name}：存檔並命名為 name，但不離開 :wq：存檔並離開 :!wq：強制存檔並離開 其他未提及的指令及模式可自行查閱。 參考： Huli－紮實的網頁前端學習路線與資源推薦 維基百科：Vim 超簡明 Vim 操作介紹 簡明 Vim 文字編輯器操作入門教學","link":"/Others/Command%20Line%20%E8%88%87%20Vim%20%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"},{"title":"基礎環境建置 – Terminal、Git","text":"俗話說工欲善其事，必先利其器，在學習 Git 之前，先來建置電腦環境吧！這篇筆記主要記載建置環境時遇到的疑難雜症。 安裝的工具總共有： Homebrew（macOS 系統的套件管理工具） Git（一套能夠管理檔案的版本的程式 ） iTerm2（用於取代 MAC 原生終端機的工具） zsh（Z shell－維基百科） oh-my-zsh（zsh 的懶人包版本，已經先載好一些主題、外掛和設定） 安裝 Git安裝 Git 的方法有幾種，我選擇的方法是按照 Git 官網 說明，利用 Homebrew 套件管理工具來進行安裝，安裝完畢後按照指示在終端機輸入 $ brew install git ，並完成 Git 安裝。 這邊要特別注意的是，如果安裝過程出現 git -bash: $: command not found 時，請記得把 $ 拿掉。 iTerm2因為 Mac 本身內建的終端機樣式較少，所以可以自行斟酌是否要安裝其他 Terminal，這邊推薦使用 iTerm2，安裝方式我參考 超簡單！十分鐘打造漂亮又好用的 zsh command line 環境 來進行安裝，但因為文章比較舊，在安裝過程上有一些步驟需要更新，以下紀錄我所遇到的問題及解法： 1. 字體安裝遇到字體安裝的問題，在原文中安裝的步驟是寫： # 先執行這行，才能用 homebrew 安裝字型（曾經執行過的人可以跳過這個指令）brew tap caskroom/fonts# 安裝指令brew cask install font-sourcecodepro-nerd-font 但實際運行 brew tap caskroom/fonts 這句時，卻會報錯出現 Error: caskroom/fonts was moved. Tap homebrew/cask-fonts instead. 解法：brew tap caskroom/fonts 改成 brew tap homebrew/cask-fonts 即可解決 2. 安裝其他字型文中所提到若想安裝其他字型可輸入 brew cask search nerd 來搜尋，但此指令已不能再使用，需 解法：改為 brew search nerd 安裝 zsh theme安裝完 oh-my-zsh 後，最後就是安裝 zsh theme 的步驟，可是在安裝 zsh theme 時，因為對終端機指令不太熟悉，我卡很久，一直不太懂編輯 ~/.zshrc 是什麼意思，後來才知道這是一個隱藏的檔案，需要先打開來做設定。 打開 ~/.zshrc 的方式有兩種： 打開 Finder，按下快捷鍵 Command ⌘ + Shift + . ，即可顯示出隱藏檔案 .zshrc。 在 Terminal 直接輸入 open ~/.zshrc，系統即會直接打開檔案。 環境建置完成以上問題皆排除後，即可完成基礎環境建置。 參考： 安裝 homebrew cask 報錯問題 brew caskでフォントを入れる方法 #homebrew brew cask search が使えなくなったので brew search を使います [心得] iTerm2 + zsh，打造更好的工作環境","link":"/Others/%E5%9F%BA%E7%A4%8E%E7%92%B0%E5%A2%83%E5%BB%BA%E7%BD%AE%E2%80%93Terminal%E3%80%81Git/"}],"tags":[{"name":"Others","slug":"Others","link":"/tags/Others/"},{"name":"程式導師計畫","slug":"Lidemy","link":"/tags/Lidemy/"}],"categories":[{"name":"Others","slug":"Others","link":"/categories/Others/"}]}